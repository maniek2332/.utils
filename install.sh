#!/bin/bash

UTILS_DIR=`pwd`
RC_FILE="utils.rc"

function make_stderred {
    if [[ ! -f submodules/stderred/Makefile ]]
    then
        echo "stderred Makefile does not exists" > /dev/stderr
        exit 1
    fi
    cd submodules/stderred/

    make build
    if [[ ! $? ]]
    then
        echo "Make failed" > /dev/stderr
        exit 1
    fi

    cd "$UTILS_DIR"
    mkdir -p lib
    ln -sf ../submodules/stderred/build/libstderred.so lib/
}

function make_sack {
    mkdir -pv bin
    FILES=( sack sag sgrep )
    for FNAME in ${FILES[@]}
    do
        FPATH=submodules/sack/${FNAME}
        if [[ ! -f $FPATH ]]
        then
            echo "${FPATH} does not exists" > /dev/stderr
            exit 1
        fi
        ln -sfv ../${FPATH} bin/${FNAME}
    done

    if [[ ! -e ~/.sackrc ]]
    then
        cp -v submodules/sack/.sackrc ~/.sackrc
    else
        echo "~/.sackrc file already exists, not overwriting"
    fi

}

function make_rcfile {
    (
        echo -n ;\
        echo "# THIS FILE IS AUTOMATICALLY GENERATED BY INSTALL SCRIPT" ;\
        echo "# DON'T BOTHER EDITING IT" ;\
        echo "" ;\
        echo "export LD_PRELOAD=\"${UTILS_DIR}/lib/libstderred.so"'${LD_PRELOAD:+:$LD_PRELOAD}"'
        echo "export PATH=\"${UTILS_DIR}/bin"'${PATH:+:$PATH}"'
    ) > $RC_FILE

    echo "Don't forget to source the .utils/utils.rc!"
}

if [[ -n $1 ]]
then
    while [[ -n $1 ]]
    do
        FUNC="make_${1}"
        echo "* Selected: $FUNC"
        $FUNC
        shift
    done
else
    make_stderred
    make_sack
    make_rcfile
fi
